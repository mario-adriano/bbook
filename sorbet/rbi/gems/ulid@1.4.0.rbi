# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ulid` gem.
# Please instead update this file by running `bin/tapioca gem ulid`.

# source://ulid//lib/ulid/version.rb#2
module ULID
  extend ::ULID::Generator
end

# source://ulid//lib/ulid/generator.rb#6
module ULID::Generator
  # Generates a 128-bit ULID string.
  #
  # @param time [Time] (Time.now) Timestamp - first 48 bits
  # @param suffix [String] (80 random bits) - the remaining 80 bits as hex encodable string
  #
  # source://ulid//lib/ulid/generator.rb#17
  def generate(time = T.unsafe(nil), suffix: T.unsafe(nil)); end

  # Generates a 128-bit ULID.
  #
  # @param time [Time] (Time.now) Timestamp - first 48 bits
  # @param suffix [String] (80 random bits) - the remaining 80 bits as hex encodable string
  #
  # source://ulid//lib/ulid/generator.rb#30
  def generate_bytes(time = T.unsafe(nil), suffix: T.unsafe(nil)); end

  private

  # Encodes a 128-bit integer input as a 26-character ULID string using Crockford's Base32.
  #
  # source://ulid//lib/ulid/generator.rb#44
  def encode(input, length); end

  # Returns the first 6 bytes of a timestamp (in milliseconds since the Unix epoch) as a 48-bit byte string
  #
  # source://ulid//lib/ulid/generator.rb#58
  def time_48bit(time = T.unsafe(nil)); end
end

# source://ulid//lib/ulid/generator.rb#10
ULID::Generator::BITS_PER_B32_CHAR = T.let(T.unsafe(nil), Integer)

# source://ulid//lib/ulid/generator.rb#9
ULID::Generator::ENCODED_LENGTH = T.let(T.unsafe(nil), Integer)

# Crockford's Base32
#
# source://ulid//lib/ulid/generator.rb#7
ULID::Generator::ENCODING = T.let(T.unsafe(nil), Array)

# source://ulid//lib/ulid/generator.rb#12
ULID::Generator::MASK = T.let(T.unsafe(nil), Integer)

# source://ulid//lib/ulid/generator.rb#8
ULID::Generator::RANDOM_BITS = T.let(T.unsafe(nil), Integer)

# source://ulid//lib/ulid/generator.rb#11
ULID::Generator::ZERO = T.let(T.unsafe(nil), Integer)

# source://ulid//lib/ulid/version.rb#3
ULID::VERSION = T.let(T.unsafe(nil), String)
